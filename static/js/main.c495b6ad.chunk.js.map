{"version":3,"sources":["Components/ItemInput.jsx","Classes/Enchantment.js","Classes/WeaponEnchantment.js","Components/EnchantmentInput.jsx","Components/SoulInput.jsx","Components/PerksInput.jsx","Components/EnchantmentEffect.jsx","Classes/Perk.js","App.jsx","reportWebVitals.js","index.js"],"names":["ItemInput","props","state","handleChangeSlot","classes","FormControl","className","formControl","InputLabel","id","Select","labelId","value","slot","onChange","MenuItem","map","Enchantment","name","slots","this","WeaponEnchantment","EnchantmentInput","handleChangeFirstEnchantment","handleChangeSecondEnchantment","weaponEnchantments","fortifySkillEnchantments","fortifyAttributeEnchantments","fortifyOtherEnchantments","resistEnchantments","otherEnchantments","enchantments","enchantment","JSON","stringify","filter","includes","perks","reduce","isExtraEffectSelected","perk","selected","SoulInput","handleChangeSoulSize","soulSize","PerksInput","handleChangePerk","handleChangeMultilevelPerk","getMultilevelPerkOptions","result","i","maxLevel","push","level","Typography","color","display","variant","isMultilevelPerk","defaultValue","FormControlLabel","control","Checkbox","checked","label","EnchantmentEffect","Perk","options","theme","createMuiTheme","palette","type","useStyles","makeStyles","app","textAlign","margin","spacing","minWidth","selectEmpty","marginTop","paperContainer","padding","width","maxWidth","appHeader","backgroundColor","minHeight","flexDirection","alignItems","justifyContent","fontSize","slider","App","otherTreePerks","enchantmentPerks","sort","a","b","useState","enchanterPerk","skill","setState","ThemeProvider","Paper","event","target","parse","TextField","error","helperText","Divider","toggleSelected","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c495b6ad.chunk.js","sourcesContent":["import React from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport const ItemInput = (props) => {\r\n  const { state, handleChangeSlot, classes } = props;\r\n\r\n  const slots = [\r\n    \"Head\",\r\n    \"Neck\",\r\n    \"Chest\",\r\n    \"Hands\",\r\n    \"Finger\",\r\n    \"Feet\",\r\n    \"Shield\",\r\n    \"Weapon\",\r\n  ];\r\n  return (\r\n    <FormControl className={classes.formControl}>\r\n      <InputLabel id=\"demo-simple-select-filled-label\">Item</InputLabel>\r\n      <Select\r\n        labelId=\"demo-simple-select-filled-label\"\r\n        id=\"demo-simple-select-filled\"\r\n        value={state.slot}\r\n        onChange={handleChangeSlot}\r\n      >\r\n        <MenuItem value=\"\">\r\n          <em>None</em>\r\n        </MenuItem>\r\n        {slots.map((slot) => {\r\n          return <MenuItem value={slot}>{`${slot}`}</MenuItem>;\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","export default class Enchantment {\r\n  constructor(name, slots) {\r\n    this.name = name;\r\n    this.slots = slots;\r\n  }\r\n}\r\n","import Enchantment from \"./Enchantment\";\r\n\r\nexport default class WeaponEnchantment extends Enchantment {\r\n  constructor(name) {\r\n    super(name, [\"Weapon\"]);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport Enchantment from \"../Classes/Enchantment\";\r\nimport WeaponEnchantment from \"../Classes/WeaponEnchantment\";\r\n\r\nexport const EnchantmentInput = (props) => {\r\n  const {\r\n    classes,\r\n    state,\r\n    handleChangeFirstEnchantment,\r\n    handleChangeSecondEnchantment,\r\n  } = props;\r\n  const weaponEnchantments = [\r\n    new WeaponEnchantment(\"Absorb Health\"),\r\n    new WeaponEnchantment(\"Absorb Magicka\"),\r\n    new WeaponEnchantment(\"Absorb Stamina\"),\r\n    new WeaponEnchantment(\"Chaos Damage\"),\r\n    new WeaponEnchantment(\"Fire Damage\"),\r\n    new WeaponEnchantment(\"Frost Damage\"),\r\n    new WeaponEnchantment(\"Magicka Damage\"),\r\n    new WeaponEnchantment(\"Shock Damage\"),\r\n    new WeaponEnchantment(\"Stamina Damage\"),\r\n    new WeaponEnchantment(\"Banish\"),\r\n    new WeaponEnchantment(\"Fear\"),\r\n    new WeaponEnchantment(\"Turn Undead\"),\r\n    new WeaponEnchantment(\"Paralyze\"),\r\n    new WeaponEnchantment(\"Soul Trap\"),\r\n    new WeaponEnchantment(\"Briarheart Geis\"),\r\n    new WeaponEnchantment(\"Fiery Soul Trap\"),\r\n    new WeaponEnchantment(\"Huntsman's Prowess\"),\r\n    new WeaponEnchantment(\"Silent Moons Enchant\"),\r\n    new WeaponEnchantment(\"Smithing Expertise\"),\r\n  ];\r\n  const fortifySkillEnchantments = [\r\n    new Enchantment(\"Fortify Alchemy\", [\"Head\", \"Neck\", \"Hands\", \"Finger\"]),\r\n    new Enchantment(\"Fortify Alteration\", [\"Head\", \"Neck\", \"Chest\", \"Finger\"]),\r\n    new Enchantment(\"Fortify Archery\", [\"Head\", \"Neck\", \"Hands\", \"Finger\"]),\r\n    new Enchantment(\"Fortify Barter\", [\"Neck\"]),\r\n    new Enchantment(\"Fortify Block\", [\"Neck\", \"Hands\", \"Finger\", \"Shield\"]),\r\n    new Enchantment(\"Fortify Conjuration\", [\"Head\", \"Neck\", \"Chest\", \"Finger\"]),\r\n    new Enchantment(\"Fortify Destruction\", [\"Head\", \"Neck\", \"Chest\", \"Finger\"]),\r\n    new Enchantment(\"Fortify Heavy Armor\", [\r\n      \"Neck\",\r\n      \"Chest\",\r\n      \"Hands\",\r\n      \"Finger\",\r\n    ]),\r\n    new Enchantment(\"Fortify Illusion\", [\"Head\", \"Neck\", \"Chest\", \"Finger\"]),\r\n    new Enchantment(\"Fortify Light armor\", [\r\n      \"Neck\",\r\n      \"Chest\",\r\n      \"Hands\",\r\n      \"Finger\",\r\n    ]),\r\n    new Enchantment(\"Fortify Lockpicking\", [\"Head\", \"Neck\", \"Hands\", \"Finger\"]),\r\n    new Enchantment(\"Fortify One-Handed\", [\"Neck\", \"Hands\", \"Finger\", \"Feet\"]),\r\n    new Enchantment(\"Fortify Pickpocket\", [\"Neck\", \"Hands\", \"Finger\", \"Feet\"]),\r\n    new Enchantment(\"Fortify Restoration\", [\"Head\", \"Neck\", \"Chest\", \"Finger\"]),\r\n    new Enchantment(\"Fortify Smithing\", [\"Neck\", \"Chest\", \"Hands\", \"Finger\"]),\r\n    new Enchantment(\"Fortify Sneak\", [\"Neck\", \"Hands\", \"Finger\", \"Feet\"]),\r\n    new Enchantment(\"Fortify Two-Handed\", [\"Neck\", \"Hands\", \"Finger\", \"Feet\"]),\r\n  ];\r\n  const fortifyAttributeEnchantments = [\r\n    new Enchantment(\"Fortify Healing Rate\", [\"Finger\", \"Neck\", \"Chest\"]),\r\n    new Enchantment(\"Fortify Health\", [\"Finger\", \"Neck\", \"Chest\", \"Shield\"]),\r\n    new Enchantment(\"Fortify Magicka\", [\"Finger\", \"Head\", \"Neck\", \"Hands\"]),\r\n    new Enchantment(\"Fortify Magicka Regen\", [\"Finger\", \"Head\", \"Chest\"]),\r\n    new Enchantment(\"Fortify Stamina\", [\"Finger\", \"Neck\", \"Chest\", \"Feet\"]),\r\n    new Enchantment(\"Fortify Stamina Regen\", [\r\n      \"Neck\",\r\n      \"Chest\",\r\n      \"Feet\",\r\n      \"Finger\",\r\n    ]),\r\n  ];\r\n  const fortifyOtherEnchantments = [\r\n    new Enchantment(\"Fortify Carry Weight\", [\r\n      \"Neck\",\r\n      \"Hands\",\r\n      \"Finger\",\r\n      \"Feet\",\r\n    ]),\r\n    new Enchantment(\"Fortify Alteration and Magicka Regen\", [\"Chest\"]),\r\n    new Enchantment(\"Fortify Conjuration and Magicka Regen\", [\"Chest\"]),\r\n    new Enchantment(\"Fortify Destruction and Magicka Regen\", [\"Chest\"]),\r\n    new Enchantment(\"Fortify Illusion and Magicka Regen\", [\"Chest\"]),\r\n    new Enchantment(\"Fortify Restoration and Magicka Regen\", [\"Chest\"]),\r\n    new Enchantment(\"Fortify Unarmed\", [\"Hands\", \"Finger\"]),\r\n  ];\r\n  const resistEnchantments = [\r\n    new Enchantment(\"Resist Disease\", [\"Neck\", \"Finger\", \"Shield\", \"Chest\"]),\r\n    new Enchantment(\"Resist Fire\", [\"Neck\", \"Finger\", \"Shield\", \"Feet\"]),\r\n    new Enchantment(\"Resist Frost\", [\"Neck\", \"Finger\", \"Shield\", \"Feet\"]),\r\n    new Enchantment(\"Resist Magic\", [\"Neck\", \"Finger\", \"Shield\"]),\r\n    new Enchantment(\"Resist Poison\", [\"Neck\", \"Finger\", \"Shield\", \"Chest\"]),\r\n    new Enchantment(\"Resist Shock\", [\"Neck\", \"Finger\", \"Shield\", \"Feet\"]),\r\n  ];\r\n  const otherEnchantments = [\r\n    new Enchantment(\"Muffle\", [\"Feet\"]),\r\n    new Enchantment(\"Waterbreathing\", [\"Head\", \"Neck\", \"Finger\"]),\r\n  ];\r\n  const enchantments = [\r\n    ...fortifySkillEnchantments,\r\n    ...fortifyAttributeEnchantments,\r\n    ...fortifyOtherEnchantments,\r\n    ...resistEnchantments,\r\n    ...otherEnchantments,\r\n    ...weaponEnchantments,\r\n  ];\r\n  return (\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-filled-label\">\r\n          Enchantment\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-filled-label\"\r\n          id=\"demo-simple-select-filled\"\r\n          value={\r\n            state.enchantment[0] ? JSON.stringify(state.enchantment[0]) : \"\"\r\n          }\r\n          onChange={handleChangeFirstEnchantment}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          {enchantments\r\n            .filter((enchantment) => {\r\n              return (\r\n                enchantment.slots.includes(state.slot) &&\r\n                enchantment.name !== state.enchantment[1]?.name\r\n              );\r\n            })\r\n            .map((enchantment) => {\r\n              return (\r\n                <MenuItem\r\n                  value={JSON.stringify(enchantment)}\r\n                >{`${enchantment.name}`}</MenuItem>\r\n              );\r\n            })}\r\n        </Select>\r\n      </FormControl>\r\n      {state.perks.reduce((isExtraEffectSelected, perk) => {\r\n        return isExtraEffectSelected\r\n          ? isExtraEffectSelected\r\n          : perk.name === \"Extra Effect\" && perk.selected;\r\n      }, false) ? (\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"demo-simple-select-filled-label\">\r\n            Enchantment 2\r\n          </InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-filled-label\"\r\n            id=\"demo-simple-select-filled\"\r\n            value={\r\n              state.enchantment[1] ? JSON.stringify(state.enchantment[1]) : \"\"\r\n            }\r\n            onChange={handleChangeSecondEnchantment}\r\n          >\r\n            <MenuItem value=\"\">\r\n              <em>None</em>\r\n            </MenuItem>\r\n            {enchantments\r\n              .filter((enchantment) => {\r\n                return (\r\n                  enchantment.slots.includes(state.slot) &&\r\n                  enchantment.name !== state.enchantment[0]?.name\r\n                );\r\n              })\r\n              .map((enchantment) => {\r\n                return (\r\n                  <MenuItem\r\n                    value={JSON.stringify(enchantment)}\r\n                  >{`${enchantment.name}`}</MenuItem>\r\n                );\r\n              })}\r\n          </Select>\r\n        </FormControl>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport const SoulInput = (props) => {\r\n  const { handleChangeSoulSize, state, classes } = props;\r\n  const soulSizes = [\"Petty\", \"Lesser\", \"Common\", \"Greater\", \"Grand\"];\r\n  return (\r\n    <FormControl className={classes.formControl}>\r\n      <InputLabel id=\"demo-simple-select-filled-label\">Soul</InputLabel>\r\n      <Select\r\n        labelId=\"demo-simple-select-filled-label\"\r\n        id=\"demo-simple-select-filled\"\r\n        value={state.soulSize}\r\n        onChange={handleChangeSoulSize}\r\n      >\r\n        <MenuItem value=\"\">\r\n          <em>None</em>\r\n        </MenuItem>\r\n        {soulSizes.map((soulSize) => {\r\n          return <MenuItem value={soulSize}>{`${soulSize}`}</MenuItem>;\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nexport const PerksInput = (props) => {\r\n  const {\r\n    state,\r\n    classes,\r\n    handleChangePerk,\r\n    handleChangeMultilevelPerk,\r\n  } = props;\r\n\r\n  const getMultilevelPerkOptions = (perk) => {\r\n    let result = [];\r\n    for (let i = 0; i <= perk.maxLevel; i++) {\r\n      result.push(\r\n        <MenuItem value={JSON.stringify({ ...perk, level: i })}>\r\n          {i ? `${perk.name} ${i}` : <em>None</em>}\r\n        </MenuItem>\r\n      );\r\n    }\r\n    return result;\r\n  };\r\n  return (\r\n    <>\r\n      <Typography color=\"textSecondary\" display=\"block\" variant=\"caption\">\r\n        Perks\r\n      </Typography>\r\n      {state.perks.map((perk) => {\r\n        return perk.isMultilevelPerk ? (\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-filled-label\">\r\n              {perk.name}\r\n            </InputLabel>\r\n            <Select\r\n              defaultValue={JSON.stringify({ ...perk, level: 0 })}\r\n              value={JSON.stringify(perk)}\r\n              onChange={handleChangeMultilevelPerk}\r\n            >\r\n              {getMultilevelPerkOptions(perk)}\r\n            </Select>\r\n          </FormControl>\r\n        ) : (\r\n          <FormControlLabel\r\n            className={classes.formControl}\r\n            control={\r\n              <Checkbox\r\n                checked={perk.selected}\r\n                onChange={handleChangePerk}\r\n                name={perk.name}\r\n                value={JSON.stringify(perk)}\r\n              />\r\n            }\r\n            label={perk.name}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n","import Typography from \"@material-ui/core/Typography\";\r\n\r\nexport const EnchantmentEffect = (props) => {\r\n  const { state, classes } = props;\r\n\r\n  return (\r\n    <>\r\n      <Typography color=\"textSecondary\" display=\"block\" variant=\"caption\">\r\n        Effect\r\n      </Typography>\r\n      {state.enchantment.map((enchantment) => {\r\n        return enchantment ? (\r\n          <Typography>{`${\r\n            enchantment.name\r\n          }: Sneak is ${100}% stronger.`}</Typography>\r\n        ) : null;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n","export default class Perk {\r\n  constructor(name, options = { selected: false, level: 0, maxLevel: 0 }) {\r\n    const { selected, level, maxLevel } = options;\r\n    this.name = name;\r\n    this.selected = selected;\r\n    this.level = level;\r\n    this.maxLevel = maxLevel;\r\n  }\r\n\r\n  toggleSelected() {\r\n    this.selected = !this.selected;\r\n  }\r\n\r\n  get isMultilevelPerk() {\r\n    return this.maxLevel > 0;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Divider from \"@material-ui/core/Divider\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport {\n  ThemeProvider,\n  createMuiTheme,\n  makeStyles,\n} from \"@material-ui/core/styles\";\nimport { ItemInput } from \"./Components/ItemInput\";\nimport { EnchantmentInput } from \"./Components/EnchantmentInput\";\nimport { SoulInput } from \"./Components/SoulInput\";\nimport { PerksInput } from \"./Components/PerksInput\";\nimport { EnchantmentEffect } from \"./Components/EnchantmentEffect\";\nimport Perk from \"./Classes/Perk\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  app: { textAlign: \"center\" },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  paperContainer: { padding: 16, width: \"80%\", maxWidth: \"1080px\" },\n  appHeader: {\n    backgroundColor: \"#282c34\",\n    minHeight: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: \"calc(10px + 2vmin)\",\n  },\n  slider: { width: \"80%\" },\n}));\n\nfunction App() {\n  const otherTreePerks = [\n    new Perk(\"Augmented Flames\", { level: 0, maxLevel: 2 }),\n    new Perk(\"Augmented Frost\", { level: 0, maxLevel: 2 }),\n    new Perk(\"Augmented Shock\", { level: 0, maxLevel: 2 }),\n    new Perk(\"Necromage\", { selected: false }),\n    new Perk(\"Master of the Mind\", { selected: false }),\n  ];\n  const enchantmentPerks = [\n    new Perk(\"Enchanter\", { level: 0, maxLevel: 5 }),\n    new Perk(\"Fire Enchanter\", { selected: false }),\n    new Perk(\"Frost Enchanter\", { selected: false }),\n    new Perk(\"Storm Enchanter\", { selected: false }),\n    new Perk(\"Insightful Enchanter\", { selected: false }),\n    new Perk(\"Corpus Enchanter\", { selected: false }),\n    new Perk(\"Extra Effect\", { selected: false }),\n    ...otherTreePerks,\n  ].sort((a, b) => {\n    return a.maxLevel ? -1 : 1;\n  });\n\n  const classes = useStyles();\n  const [state, setState] = useState({\n    slot: \"\",\n    enchantment: [\"\"],\n    soulSize: \"\",\n    perks: enchantmentPerks,\n    enchanterPerk: 0,\n    skill: \"\",\n  });\n\n  const handleChangeSlot = (event) => {\n    setState({ ...state, slot: event.target.value });\n  };\n  const handleChangeFirstEnchantment = (event) => {\n    setState({\n      ...state,\n      enchantment: [JSON.parse(event.target.value), state.enchantment[1]],\n    });\n  };\n  const handleChangeSecondEnchantment = (event) => {\n    setState({\n      ...state,\n      enchantment: [state.enchantment[0], JSON.parse(event.target.value)],\n    });\n  };\n  const handleChangeSoulSize = (event) => {\n    setState({ ...state, soulSize: event.target.value });\n  };\n  const handleChangePerk = (event) => {\n    const value = JSON.parse(event.target.value);\n    setState({\n      ...state,\n      perks: state.perks.map((perk) => {\n        if (perk.name === value.name) {\n          perk.toggleSelected();\n        }\n        return perk;\n      }),\n    });\n  };\n  const handleChangeMultilevelPerk = (event) => {\n    const value = JSON.parse(event.target.value);\n    setState({\n      ...state,\n      perks: state.perks.map((perk) => {\n        if (perk.name === value.name) {\n          perk.level = value.level;\n        }\n        return perk;\n      }),\n    });\n  };\n\n  const handleChangeSkill = (event) => {\n    setState({ ...state, skill: event.target.value });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <header className={classes.appHeader}>\n          <Paper className={classes.paperContainer}>\n            <ItemInput\n              classes={classes}\n              state={state}\n              handleChangeSlot={handleChangeSlot}\n            />\n            <EnchantmentInput\n              classes={classes}\n              state={state}\n              handleChangeFirstEnchantment={handleChangeFirstEnchantment}\n              handleChangeSecondEnchantment={handleChangeSecondEnchantment}\n            />\n            <SoulInput\n              classes={classes}\n              state={state}\n              handleChangeSoulSize={handleChangeSoulSize}\n            />\n            <FormControl className={classes.formControl}>\n              <TextField\n                id=\"standard-basic\"\n                label=\"Skill Level\"\n                type=\"number\"\n                value={state.skill}\n                onChange={handleChangeSkill}\n                error={state.skill > 100 || state.skill < 0}\n                helperText={\n                  state.skill > 100 || state.skill < 0\n                    ? \"Skill level must be between 0 and 100\"\n                    : \"\"\n                }\n              />\n            </FormControl>\n            <Divider />\n            <PerksInput\n              classes={classes}\n              state={state}\n              handleChangePerk={handleChangePerk}\n              handleChangeMultilevelPerk={handleChangeMultilevelPerk}\n            />\n            <Divider />\n            <EnchantmentEffect classes={classes} state={state} />\n          </Paper>\n        </header>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}