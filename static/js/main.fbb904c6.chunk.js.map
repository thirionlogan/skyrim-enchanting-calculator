{"version":3,"sources":["Components/ItemInput.jsx","Components/EnchantmentInput.jsx","Components/SoulInput.jsx","Components/PerksInput.jsx","Components/EnchantmentEffect.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ItemInput","props","state","handleChangeSlot","classes","FormControl","className","formControl","InputLabel","id","Select","labelId","value","slot","onChange","MenuItem","map","EnchantmentInput","handleChangeFirstEnchantment","handleChangeSecondEnchantment","enchantments","name","slots","enchantment","JSON","stringify","filter","includes","perks","reduce","isExtraEffectSelected","perk","selected","SoulInput","handleChangeSoulSize","soulSize","PerksInput","handleChangePerk","handleChangeEnchanterPerk","Typography","color","display","variant","Slider","slider","defaultValue","getAriaValueText","aria-labelledby","valueLabelDisplay","step","marks","label","min","max","FormControlLabel","control","Checkbox","checked","EnchantmentEffect","theme","createMuiTheme","palette","type","useStyles","makeStyles","app","textAlign","margin","spacing","minWidth","selectEmpty","marginTop","paperContainer","padding","width","maxWidth","appHeader","backgroundColor","minHeight","flexDirection","alignItems","justifyContent","fontSize","App","useState","enchanterPerk","skill","setState","useEffect","console","log","ThemeProvider","Paper","event","target","parse","TextField","Divider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbb904c6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport const ItemInput = (props) => {\r\n  const { state, handleChangeSlot, classes } = props;\r\n\r\n  const slots = [\r\n    \"Head\",\r\n    \"Neck\",\r\n    \"Chest\",\r\n    \"Hands\",\r\n    \"Finger\",\r\n    \"Feet\",\r\n    \"Shield\",\r\n    \"Weapon\",\r\n  ];\r\n  return (\r\n    <FormControl className={classes.formControl}>\r\n      <InputLabel id=\"demo-simple-select-filled-label\">Item</InputLabel>\r\n      <Select\r\n        labelId=\"demo-simple-select-filled-label\"\r\n        id=\"demo-simple-select-filled\"\r\n        value={state.slot}\r\n        onChange={handleChangeSlot}\r\n      >\r\n        <MenuItem value=\"\">\r\n          <em>None</em>\r\n        </MenuItem>\r\n        {slots.map((slot) => {\r\n          return <MenuItem value={slot}>{`${slot}`}</MenuItem>;\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport const EnchantmentInput = (props) => {\r\n  const {\r\n    classes,\r\n    state,\r\n    handleChangeFirstEnchantment,\r\n    handleChangeSecondEnchantment,\r\n  } = props;\r\n  const weaponEnchantments = [\r\n    { name: \"Absorb Health\", slots: [\"Weapon\"] },\r\n    { name: \"Absorb Magicka\", slots: [\"Weapon\"] },\r\n    { name: \"Absorb Stamina\", slots: [\"Weapon\"] },\r\n    { name: \"Chaos Damage\", slots: [\"Weapon\"] },\r\n    { name: \"Fire Damage\", slots: [\"Weapon\"] },\r\n    { name: \"Frost Damage\", slots: [\"Weapon\"] },\r\n    { name: \"Magicka Damage\", slots: [\"Weapon\"] },\r\n    { name: \"Shock Damage\", slots: [\"Weapon\"] },\r\n    { name: \"Stamina Damage\", slots: [\"Weapon\"] },\r\n    { name: \"Banish\", slots: [\"Weapon\"] },\r\n    { name: \"Fear\", slots: [\"Weapon\"] },\r\n    { name: \"Turn Undead\", slots: [\"Weapon\"] },\r\n    { name: \"Paralyze\", slots: [\"Weapon\"] },\r\n    { name: \"Soul Trap\", slots: [\"Weapon\"] },\r\n    { name: \"Briarheart Geis\", slots: [\"Weapon\"] },\r\n    { name: \"Fiery Soul Trap\", slots: [\"Weapon\"] },\r\n    { name: \"Huntsman's Prowess\", slots: [\"Weapon\"] },\r\n    { name: \"Silent Moons Enchant\", slots: [\"Weapon\"] },\r\n    { name: \"Smithing Expertise\", slots: [\"Weapon\"] },\r\n  ];\r\n  const fortifySkillEnchantments = [\r\n    { name: \"Fortify Alchemy\", slots: [\"Head\", \"Neck\", \"Hands\", \"Finger\"] },\r\n    { name: \"Fortify Alteration\", slots: [\"Head\", \"Neck\", \"Chest\", \"Finger\"] },\r\n    { name: \"Fortify Archery\", slots: [\"Head\", \"Neck\", \"Hands\", \"Finger\"] },\r\n    { name: \"Fortify Barter\", slots: [\"Neck\"] },\r\n    { name: \"Fortify Block\", slots: [\"Neck\", \"Hands\", \"Finger\", \"Shield\"] },\r\n    { name: \"Fortify Conjuration\", slots: [\"Head\", \"Neck\", \"Chest\", \"Finger\"] },\r\n    { name: \"Fortify Destruction\", slots: [\"Head\", \"Neck\", \"Chest\", \"Finger\"] },\r\n    {\r\n      name: \"Fortify Heavy Armor\",\r\n      slots: [\"Neck\", \"Chest\", \"Hands\", \"Finger\"],\r\n    },\r\n    { name: \"Fortify Illusion\", slots: [\"Head\", \"Neck\", \"Chest\", \"Finger\"] },\r\n    {\r\n      name: \"Fortify Light armor\",\r\n      slots: [\"Neck\", \"Chest\", \"Hands\", \"Finger\"],\r\n    },\r\n    { name: \"Fortify Lockpicking\", slots: [\"Head\", \"Neck\", \"Hands\", \"Finger\"] },\r\n    { name: \"Fortify One-Handed\", slots: [\"Neck\", \"Hands\", \"Finger\", \"Feet\"] },\r\n    { name: \"Fortify Pickpocket\", slots: [\"Neck\", \"Hands\", \"Finger\", \"Feet\"] },\r\n    { name: \"Fortify Restoration\", slots: [\"Head\", \"Neck\", \"Chest\", \"Finger\"] },\r\n    { name: \"Fortify Smithing\", slots: [\"Neck\", \"Chest\", \"Hands\", \"Finger\"] },\r\n    { name: \"Fortify Sneak\", slots: [\"Neck\", \"Hands\", \"Finger\", \"Feet\"] },\r\n    { name: \"Fortify Two-Handed\", slots: [\"Neck\", \"Hands\", \"Finger\", \"Feet\"] },\r\n  ];\r\n  const fortifyAttributeEnchantments = [\r\n    { name: \"Fortify Healing Rate\", slots: [\"Finger\", \"Neck\", \"Chest\"] },\r\n    { name: \"Fortify Health\", slots: [\"Finger\", \"Neck\", \"Chest\", \"Shield\"] },\r\n    { name: \"Fortify Magicka\", slots: [\"Finger\", \"Head\", \"Neck\", \"Hands\"] },\r\n    { name: \"Fortify Magicka Regen\", slots: [\"Finger\", \"Head\", \"Chest\"] },\r\n    { name: \"Fortify Stamina\", slots: [\"Finger\", \"Neck\", \"Chest\", \"Feet\"] },\r\n    {\r\n      name: \"Fortify Stamina Regen\",\r\n      slots: [\"Neck\", \"Chest\", \"Feet\", \"Finger\"],\r\n    },\r\n  ];\r\n  const fortifyOtherEnchantments = [\r\n    {\r\n      name: \"Fortify Carry Weight\",\r\n      slots: [\"Neck\", \"Hands\", \"Finger\", \"Feet\"],\r\n    },\r\n    { name: \"Fortify Alteration and Magicka Regen\", slots: [\"Chest\"] },\r\n    { name: \"Fortify Conjuration and Magicka Regen\", slots: [\"Chest\"] },\r\n    { name: \"Fortify Destruction and Magicka Regen\", slots: [\"Chest\"] },\r\n    { name: \"Fortify Illusion and Magicka Regen\", slots: [\"Chest\"] },\r\n    { name: \"Fortify Restoration and Magicka Regen\", slots: [\"Chest\"] },\r\n    { name: \"Fortify Unarmed\", slots: [\"Hands\", \"Finger\"] },\r\n  ];\r\n  const resistEnchantments = [\r\n    { name: \"Resist Disease\", slots: [\"Neck\", \"Finger\", \"Shield\", \"Chest\"] },\r\n    { name: \"Resist Fire\", slots: [\"Neck\", \"Finger\", \"Shield\", \"Feet\"] },\r\n    { name: \"Resist Frost\", slots: [\"Neck\", \"Finger\", \"Shield\", \"Feet\"] },\r\n    { name: \"Resist Magic\", slots: [\"Neck\", \"Finger\", \"Shield\"] },\r\n    { name: \"Resist Poison\", slots: [\"Neck\", \"Finger\", \"Shield\", \"Chest\"] },\r\n    { name: \"Resist Shock\", slots: [\"Neck\", \"Finger\", \"Shield\", \"Feet\"] },\r\n  ];\r\n  const otherEnchantments = [\r\n    { name: \"Muffle\", slots: [\"Feet\"] },\r\n    { name: \"Waterbreathing\", slots: [\"Head\", \"Neck\", \"Finger\"] },\r\n  ];\r\n  const enchantments = [\r\n    ...fortifySkillEnchantments,\r\n    ...fortifyAttributeEnchantments,\r\n    ...fortifyOtherEnchantments,\r\n    ...resistEnchantments,\r\n    ...otherEnchantments,\r\n    ...weaponEnchantments,\r\n  ];\r\n  return (\r\n    <>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-filled-label\">\r\n          Enchantment\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-filled-label\"\r\n          id=\"demo-simple-select-filled\"\r\n          value={\r\n            state.enchantment[0] ? JSON.stringify(state.enchantment[0]) : \"\"\r\n          }\r\n          onChange={handleChangeFirstEnchantment}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          {enchantments\r\n            .filter((enchantment) => {\r\n              return (\r\n                enchantment.slots.includes(state.slot) &&\r\n                enchantment.name !== state.enchantment[1]?.name\r\n              );\r\n            })\r\n            .map((enchantment) => {\r\n              return (\r\n                <MenuItem\r\n                  value={JSON.stringify(enchantment)}\r\n                >{`${enchantment.name}`}</MenuItem>\r\n              );\r\n            })}\r\n        </Select>\r\n      </FormControl>\r\n      {state.perks.reduce((isExtraEffectSelected, perk) => {\r\n        return isExtraEffectSelected\r\n          ? isExtraEffectSelected\r\n          : perk.name === \"Extra Effect\" && perk.selected;\r\n      }, false) ? (\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"demo-simple-select-filled-label\">\r\n            Enchantment 2\r\n          </InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-filled-label\"\r\n            id=\"demo-simple-select-filled\"\r\n            value={\r\n              state.enchantment[1] ? JSON.stringify(state.enchantment[1]) : \"\"\r\n            }\r\n            onChange={handleChangeSecondEnchantment}\r\n          >\r\n            <MenuItem value=\"\">\r\n              <em>None</em>\r\n            </MenuItem>\r\n            {enchantments\r\n              .filter((enchantment) => {\r\n                return (\r\n                  enchantment.slots.includes(state.slot) &&\r\n                  enchantment.name !== state.enchantment[0]?.name\r\n                );\r\n              })\r\n              .map((enchantment) => {\r\n                return (\r\n                  <MenuItem\r\n                    value={JSON.stringify(enchantment)}\r\n                  >{`${enchantment.name}`}</MenuItem>\r\n                );\r\n              })}\r\n          </Select>\r\n        </FormControl>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport const SoulInput = (props) => {\r\n  const { handleChangeSoulSize, state, classes } = props;\r\n  const soulSizes = [\"Petty\", \"Lesser\", \"Common\", \"Greater\", \"Grand\"];\r\n  return (\r\n    <FormControl className={classes.formControl}>\r\n      <InputLabel id=\"demo-simple-select-filled-label\">Soul</InputLabel>\r\n      <Select\r\n        labelId=\"demo-simple-select-filled-label\"\r\n        id=\"demo-simple-select-filled\"\r\n        value={state.soulSize}\r\n        onChange={handleChangeSoulSize}\r\n      >\r\n        <MenuItem value=\"\">\r\n          <em>None</em>\r\n        </MenuItem>\r\n        {soulSizes.map((soulSize) => {\r\n          return <MenuItem value={soulSize}>{`${soulSize}`}</MenuItem>;\r\n        })}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nexport const PerksInput = (props) => {\r\n  const valuetext = (value) => {\r\n    return `Enchanter ${value}`;\r\n  };\r\n\r\n  const marks = [\r\n    {\r\n      value: 1,\r\n      label: \"Enchanter 1\",\r\n    },\r\n    {\r\n      value: 2,\r\n      label: \"Enchanter 2\",\r\n    },\r\n    {\r\n      value: 3,\r\n      label: \"Enchanter 3\",\r\n    },\r\n    {\r\n      value: 4,\r\n      label: \"Enchanter 4\",\r\n    },\r\n    {\r\n      value: 5,\r\n      label: \"Enchanter 5\",\r\n    },\r\n  ];\r\n\r\n  const { state, classes, handleChangeEnchanterPerk, handleChangePerk } = props;\r\n  return (\r\n    <>\r\n      <Typography color=\"textSecondary\" display=\"block\" variant=\"caption\">\r\n        Perks\r\n      </Typography>\r\n      <Slider\r\n        className={classes.slider}\r\n        defaultValue={0}\r\n        getAriaValueText={valuetext}\r\n        aria-labelledby=\"discrete-slider\"\r\n        valueLabelDisplay=\"auto\"\r\n        step={1}\r\n        marks={marks}\r\n        min={0}\r\n        max={5}\r\n        // value={state.enchanterPerk}\r\n        // onChange={handleChangeEnchanterPerk}\r\n      />\r\n      <br />\r\n      {state.perks.map((perk) => {\r\n        return (\r\n          <FormControlLabel\r\n            className={classes.formControl}\r\n            control={\r\n              <Checkbox\r\n                checked={perk.selected}\r\n                onChange={handleChangePerk}\r\n                name={perk.name}\r\n                value={JSON.stringify(perk)}\r\n              />\r\n            }\r\n            label={perk.name}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n","import Typography from \"@material-ui/core/Typography\";\r\n\r\nexport const EnchantmentEffect = (props) => {\r\n  const { state, classes } = props;\r\n\r\n  return (\r\n    <>\r\n      <Typography color=\"textSecondary\" display=\"block\" variant=\"caption\">\r\n        Effect\r\n      </Typography>\r\n      {state.enchantment.map((enchantment) => {\r\n        return enchantment ? (\r\n          <Typography>{`${\r\n            enchantment.name\r\n          }: Sneak is ${100}% stronger.`}</Typography>\r\n        ) : null;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Divider from \"@material-ui/core/Divider\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport {\n  ThemeProvider,\n  createMuiTheme,\n  makeStyles,\n} from \"@material-ui/core/styles\";\nimport { ItemInput } from \"./Components/ItemInput\";\nimport { EnchantmentInput } from \"./Components/EnchantmentInput\";\nimport { SoulInput } from \"./Components/SoulInput\";\nimport { PerksInput } from \"./Components/PerksInput\";\nimport { EnchantmentEffect } from \"./Components/EnchantmentEffect\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  app: { textAlign: \"center\" },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  paperContainer: { padding: 16, width: \"80%\", maxWidth: \"1080px\" },\n  appHeader: {\n    backgroundColor: \"#282c34\",\n    minHeight: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: \"calc(10px + 2vmin)\",\n  },\n  slider: { width: \"80%\" },\n}));\n\nfunction App() {\n  const enchantmentPerks = [\n    { name: \"Fire Enchanter\", selected: false },\n    { name: \"Frost Enchanter\", selected: false },\n    { name: \"Storm Enchanter\", selected: false },\n    { name: \"Insightful Enchanter\", selected: false },\n    { name: \"Corpus Enchanter\", selected: false },\n    { name: \"Extra Effect\", selected: false },\n  ];\n  /*TODO: Add these Perks from other trees:\n    Augmented Flames 1/2\n    Aumented Frost 1/2\n    Augmented Shock 1/2\n    Master of the mind\n    Necromage\n  */\n\n  const classes = useStyles();\n  const [state, setState] = useState({\n    slot: \"\",\n    enchantment: [\"\"],\n    soulSize: \"\",\n    perks: enchantmentPerks,\n    enchanterPerk: 0,\n    skill: \"\",\n  });\n\n  useEffect(() => {\n    console.log(state);\n  });\n\n  const handleChangeSlot = (event) => {\n    setState({ ...state, slot: event.target.value });\n  };\n  const handleChangeFirstEnchantment = (event) => {\n    setState({\n      ...state,\n      enchantment: [JSON.parse(event.target.value), state.enchantment[1]],\n    });\n  };\n  const handleChangeSecondEnchantment = (event) => {\n    setState({\n      ...state,\n      enchantment: [state.enchantment[0], JSON.parse(event.target.value)],\n    });\n  };\n  const handleChangeSoulSize = (event) => {\n    setState({ ...state, soulSize: event.target.value });\n  };\n  const handleChangePerk = (event) => {\n    const value = JSON.parse(event.target.value);\n    setState({\n      ...state,\n      perks: state.perks.map((perk) => {\n        if (perk.name === value.name) {\n          return { ...value, selected: !perk.selected };\n        } else {\n          return perk;\n        }\n      }),\n    });\n  };\n\n  const handleChangeEnchanterPerk = (event) => {\n    setState({ ...state, enchanterPerk: event.target.value });\n  };\n  const handleChangeSkill = (event) => {\n    setState({ ...state, skill: event.target.value });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <header className={classes.appHeader}>\n          <Paper className={classes.paperContainer}>\n            <ItemInput\n              classes={classes}\n              state={state}\n              handleChangeSlot={handleChangeSlot}\n            />\n            <EnchantmentInput\n              classes={classes}\n              state={state}\n              handleChangeFirstEnchantment={handleChangeFirstEnchantment}\n              handleChangeSecondEnchantment={handleChangeSecondEnchantment}\n            />\n            <SoulInput\n              classes={classes}\n              state={state}\n              handleChangeSoulSize={handleChangeSoulSize}\n            />\n            <FormControl className={classes.formControl}>\n              <TextField\n                id=\"standard-basic\"\n                label=\"Skill Level\"\n                type=\"number\"\n                value={state.skill}\n                onChange={handleChangeSkill}\n              />\n            </FormControl>\n            <Divider />\n            <PerksInput\n              classes={classes}\n              state={state}\n              handleChangeEnchanterPerk={handleChangeEnchanterPerk}\n              handleChangePerk={handleChangePerk}\n            />\n            <Divider />\n            <EnchantmentEffect classes={classes} state={state} />\n          </Paper>\n        </header>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}