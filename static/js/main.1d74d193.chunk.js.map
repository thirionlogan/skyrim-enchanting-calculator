{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","palette","type","useStyles","makeStyles","app","textAlign","formControl","margin","spacing","minWidth","selectEmpty","marginTop","paperContainer","padding","width","appHeader","backgroundColor","minHeight","display","flexDirection","alignItems","justifyContent","fontSize","slider","valuetext","value","marks","label","App","enchantments","name","slots","classes","useState","slot","enchantment","soulSize","perks","selected","enchanterPerk","skill","state","setState","handleChangePerk","event","JSON","parse","target","map","perk","ThemeProvider","className","Paper","FormControl","InputLabel","id","Select","labelId","onChange","MenuItem","filter","includes","TextField","Divider","variant","Typography","Slider","defaultValue","getAriaValueText","aria-labelledby","valueLabelDisplay","step","min","max","FormControlLabel","control","Checkbox","checked","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d74d193.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Divider from \"@material-ui/core/Divider\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport {\n  ThemeProvider,\n  createMuiTheme,\n  makeStyles,\n} from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  app: { textAlign: \"center\" },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  paperContainer: { padding: 16, width: \"80%\" },\n  appHeader: {\n    backgroundColor: \"#282c34\",\n    minHeight: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: \"calc(10px + 2vmin)\",\n  },\n  slider: { width: \"80%\" },\n}));\n\nfunction valuetext(value) {\n  return `Enchanter\n   ${value}`;\n}\n\nconst marks = [\n  {\n    value: 1,\n    label: \"Enchanter 1\",\n  },\n  {\n    value: 2,\n    label: \"Enchanter 2\",\n  },\n  {\n    value: 3,\n    label: \"Enchanter 3\",\n  },\n  {\n    value: 4,\n    label: \"Enchanter 4\",\n  },\n  {\n    value: 5,\n    label: \"Enchanter 5\",\n  },\n];\n\nfunction App() {\n  const slots = [\n    \"Head\",\n    \"Neck\",\n    \"Chest\",\n    \"Hands\",\n    \"Finger\",\n    \"Feet\",\n    \"Shield\",\n    \"Weapon\",\n  ];\n  const weaponEnchantments = [\n    { name: \"Absorb Health\", slots: [\"Weapon\"] },\n    { name: \"Absorb Magicka\", slots: [\"Weapon\"] },\n    { name: \"Absorb Stamina\", slots: [\"Weapon\"] },\n    { name: \"Chaos Damage\", slots: [\"Weapon\"] },\n    { name: \"Fire Damage\", slots: [\"Weapon\"] },\n    { name: \"Frost Damage\", slots: [\"Weapon\"] },\n    { name: \"Magicka Damage\", slots: [\"Weapon\"] },\n    { name: \"Shock Damage\", slots: [\"Weapon\"] },\n    { name: \"Stamina Damage\", slots: [\"Weapon\"] },\n    { name: \"Banish\", slots: [\"Weapon\"] },\n    { name: \"Fear\", slots: [\"Weapon\"] },\n    { name: \"Turn Undead\", slots: [\"Weapon\"] },\n    { name: \"Paralyze\", slots: [\"Weapon\"] },\n    { name: \"Soul Trap\", slots: [\"Weapon\"] },\n    { name: \"Briarheart Geis\", slots: [\"Weapon\"] },\n    { name: \"Fiery Soul Trap\", slots: [\"Weapon\"] },\n    { name: \"Huntsman's Prowess\", slots: [\"Weapon\"] },\n    { name: \"Silent Moons Enchant\", slots: [\"Weapon\"] },\n    { name: \"Smithing Expertise\", slots: [\"Weapon\"] },\n  ];\n  const fortifySkillEnchantments = [\n    { name: \"Fortify Alchemy\", slots: [\"Head\", \"Neck\", \"Hands\", \"Finger\"] },\n    { name: \"Fortify Alteration\", slots: [\"Head\", \"Neck\", \"Chest\", \"Finger\"] },\n    { name: \"Fortify Archery\", slots: [\"Head\", \"Neck\", \"Hands\", \"Finger\"] },\n    { name: \"Fortify Barter\", slots: [\"Neck\"] },\n    { name: \"Fortify Block\", slots: [\"Neck\", \"Hands\", \"Finger\", \"Shield\"] },\n    { name: \"Fortify Conjuration\", slots: [\"Head\", \"Neck\", \"Chest\", \"Finger\"] },\n    { name: \"Fortify Destruction\", slots: [\"Head\", \"Neck\", \"Chest\", \"Finger\"] },\n    {\n      name: \"Fortify Heavy Armor\",\n      slots: [\"Neck\", \"Chest\", \"Hands\", \"Finger\"],\n    },\n    { name: \"Fortify Illusion\", slots: [\"Head\", \"Neck\", \"Chest\", \"Finger\"] },\n    {\n      name: \"Fortify Light armor\",\n      slots: [\"Neck\", \"Chest\", \"Hands\", \"Finger\"],\n    },\n    { name: \"Fortify Lockpicking\", slots: [\"Head\", \"Neck\", \"Hands\", \"Finger\"] },\n    { name: \"Fortify One-Handed\", slots: [\"Neck\", \"Hands\", \"Finger\", \"Feet\"] },\n    { name: \"Fortify Pickpocket\", slots: [\"Neck\", \"Hands\", \"Finger\", \"Feet\"] },\n    { name: \"Fortify Restoration\", slots: [\"Head\", \"Neck\", \"Chest\", \"Finger\"] },\n    { name: \"Fortify Smithing\", slots: [\"Neck\", \"Chest\", \"Hands\", \"Finger\"] },\n    { name: \"Fortify Sneak\", slots: [\"Neck\", \"Hands\", \"Finger\", \"Feet\"] },\n    { name: \"Fortify Two-Handed\", slots: [\"Neck\", \"Hands\", \"Finger\", \"Feet\"] },\n  ];\n  const fortifyAttributeEnchantments = [\n    { name: \"Fortify Healing Rate\", slots: [\"Finger\", \"Neck\", \"Chest\"] },\n    { name: \"Fortify Health\", slots: [\"Finger\", \"Neck\", \"Chest\", \"Shield\"] },\n    { name: \"Fortify Magicka\", slots: [\"Finger\", \"Head\", \"Neck\", \"Hands\"] },\n    { name: \"Fortify Magicka Regen\", slots: [\"Finger\", \"Head\", \"Chest\"] },\n    { name: \"Fortify Stamina\", slots: [\"Finger\", \"Neck\", \"Chest\", \"Feet\"] },\n    {\n      name: \"Fortify Stamina Regen\",\n      slots: [\"Neck\", \"Chest\", \"Feet\", \"Finger\"],\n    },\n  ];\n  const fortifyOtherEnchantments = [\n    {\n      name: \"Fortify Carry Weight\",\n      slots: [\"Neck\", \"Hands\", \"Finger\", \"Feet\"],\n    },\n    { name: \"Fortify Alteration and Magicka Regen\", slots: [\"Chest\"] },\n    { name: \"Fortify Conjuration and Magicka Regen\", slots: [\"Chest\"] },\n    { name: \"Fortify Destruction and Magicka Regen\", slots: [\"Chest\"] },\n    { name: \"Fortify Illusion and Magicka Regen\", slots: [\"Chest\"] },\n    { name: \"Fortify Restoration and Magicka Regen\", slots: [\"Chest\"] },\n    { name: \"Fortify Unarmed\", slots: [\"Hands\", \"Finger\"] },\n  ];\n  const resistEnchantments = [\n    { name: \"Resist Disease\", slots: [\"Neck\", \"Finger\", \"Shield\", \"Chest\"] },\n    { name: \"Resist Fire\", slots: [\"Neck\", \"Finger\", \"Shield\", \"Feet\"] },\n    { name: \"Resist Frost\", slots: [\"Neck\", \"Finger\", \"Shield\", \"Feet\"] },\n    { name: \"Resist Magic\", slots: [\"Neck\", \"Finger\", \"Shield\"] },\n    { name: \"Resist Poison\", slots: [\"Neck\", \"Finger\", \"Shield\", \"Chest\"] },\n    { name: \"Resist Shock\", slots: [\"Neck\", \"Finger\", \"Shield\", \"Feet\"] },\n  ];\n  const otherEnchantments = [\n    { name: \"Muffle\", slots: [\"Feet\"] },\n    { name: \"Waterbreathing\", slots: [\"Head\", \"Neck\", \"Finger\"] },\n  ];\n  const enchantments = [\n    ...fortifySkillEnchantments,\n    ...fortifyAttributeEnchantments,\n    ...fortifyOtherEnchantments,\n    ...resistEnchantments,\n    ...otherEnchantments,\n    ...weaponEnchantments,\n  ];\n  const soulSizes = [\"Petty\", \"Lesser\", \"Common\", \"Greater\", \"Grand\"];\n  const enchantmentPerks = [\n    { name: \"Fire Enchanter\", selected: false },\n    { name: \"Frost Enchanter\", selected: false },\n    { name: \"Storm Enchanter\", selected: false },\n    { name: \"Insightful Enchanter\", selected: false },\n    { name: \"Corpus Enchanter\", selected: false },\n    { name: \"Extra Effect\", selected: false },\n  ];\n  /*TODO: Add these Perks from other trees:\n    Augmented Flames 1/2\n    Aumented Frost 1/2\n    Augmented Shock 1/2\n    Master of the mind\n    Necromage\n  */\n\n  const classes = useStyles();\n  const [state, setState] = useState({\n    slot: \"\",\n    enchantment: \"\",\n    soulSize: \"\",\n    perks: enchantmentPerks,\n    enchanterPerk: 0,\n    skill: \"\",\n  });\n\n  const handleChangeSlot = (event) => {\n    setState({ ...state, slot: event.target.value });\n  };\n  const handleChangeEnchantment = (event) => {\n    setState({ ...state, enchantment: event.target.value });\n  };\n  const handleChangeSoulSize = (event) => {\n    setState({ ...state, soulSize: event.target.value });\n  };\n  const handleChangePerk = (event) => {\n    const value = JSON.parse(event.target.value);\n    setState({\n      ...state,\n      perks: state.perks.map((perk) => {\n        if (perk.name === value.name) {\n          return { ...value, selected: !perk.selected };\n        } else {\n          return perk;\n        }\n      }),\n    });\n  };\n\n  const handleChangeEnchanterPerk = (event) => {\n    setState({ ...state, enchanterPerk: event.target.value });\n  };\n  const handleChangeSkill = (event) => {\n    setState({ ...state, skill: event.target.value });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <header className={classes.appHeader}>\n          <Paper className={classes.paperContainer}>\n            <div>\n              <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-filled-label\">\n                  Item\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-filled-label\"\n                  id=\"demo-simple-select-filled\"\n                  value={state.slot}\n                  onChange={handleChangeSlot}\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  {slots.map((slot) => {\n                    return <MenuItem value={slot}>{`${slot}`}</MenuItem>;\n                  })}\n                </Select>\n              </FormControl>\n              <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-filled-label\">\n                  Enchantment\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-filled-label\"\n                  id=\"demo-simple-select-filled\"\n                  value={state.enchantment}\n                  onChange={handleChangeEnchantment}\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  {enchantments\n                    .filter((enchantment) => {\n                      return enchantment.slots.includes(state.slot);\n                    })\n                    .map((enchantment) => {\n                      return (\n                        <MenuItem\n                          value={enchantment.name}\n                        >{`${enchantment.name}`}</MenuItem>\n                      );\n                    })}\n                </Select>\n              </FormControl>\n              <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-filled-label\">\n                  Soul\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-filled-label\"\n                  id=\"demo-simple-select-filled\"\n                  value={state.soulSize}\n                  onChange={handleChangeSoulSize}\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  {soulSizes.map((soulSize) => {\n                    return (\n                      <MenuItem value={soulSize}>{`${soulSize}`}</MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n              <FormControl className={classes.formControl}>\n                <TextField\n                  id=\"standard-basic\"\n                  label=\"Skill Level\"\n                  type=\"number\"\n                  value={state.skill}\n                  onChange={handleChangeSkill}\n                />\n              </FormControl>\n              <Divider variant=\"middle\" />\n              <Typography variant=\"h5\">Perks</Typography>\n              <Slider\n                className={classes.slider}\n                defaultValue={0}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                step={1}\n                marks={marks}\n                min={0}\n                max={5}\n                value={state.enchanterPerk}\n                onChange={handleChangeEnchanterPerk}\n              />\n              <br />\n              {state.perks.map((perk) => {\n                return (\n                  <FormControlLabel\n                    className={classes.formControl}\n                    control={\n                      <Checkbox\n                        checked={perk.selected}\n                        onChange={handleChangePerk}\n                        name={perk.name}\n                        value={JSON.stringify(perk)}\n                      />\n                    }\n                    label={perk.name}\n                  />\n                );\n              })}\n              <br />\n            </div>\n          </Paper>\n        </header>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}